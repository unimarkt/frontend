import React, { useState } from 'react';

interface ShortcutItem {
  key: string;
  description: string;
  category: string;
}

const SHORTCUTS: ShortcutItem[] = [
  // –§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
  { key: 'Ctrl+S', description: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', category: '–§–∞–π–ª' },
  { key: 'Ctrl+E', description: '–≠–∫—Å–ø–æ—Ä—Ç', category: '–§–∞–π–ª' },
  
  // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  { key: 'Ctrl+Z', description: '–û—Ç–º–µ–Ω–∏—Ç—å', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { key: 'Ctrl+Y', description: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { key: 'Ctrl+C', description: '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { key: 'Ctrl+V', description: '–í—Å—Ç–∞–≤–∏—Ç—å', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { key: 'Ctrl+D', description: '–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { key: 'Delete', description: '–£–¥–∞–ª–∏—Ç—å', category: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  
  // –í—ã–¥–µ–ª–µ–Ω–∏–µ
  { key: 'Ctrl+A', description: '–í—ã–±—Ä–∞—Ç—å –≤—Å–µ', category: '–í—ã–¥–µ–ª–µ–Ω–∏–µ' },
  { key: 'Escape', description: '–°–Ω—è—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ', category: '–í—ã–¥–µ–ª–µ–Ω–∏–µ' },
  
  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞
  { key: 'Ctrl+G', description: '–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É', category: '–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞' },
  { key: 'Ctrl+Shift+G', description: '–†–∞–∑–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å', category: '–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞' },
  
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è
  { key: 'Ctrl++', description: '–£–≤–µ–ª–∏—á–∏—Ç—å –º–∞—Å—à—Ç–∞–±', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { key: 'Ctrl+-', description: '–£–º–µ–Ω—å—à–∏—Ç—å –º–∞—Å—à—Ç–∞–±', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { key: 'Ctrl+0', description: '–ü–æ–¥–æ–≥–Ω–∞—Ç—å –ø–æ–¥ —ç–∫—Ä–∞–Ω', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { key: 'Ctrl+1', description: '100% –º–∞—Å—à—Ç–∞–±', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  { key: 'G', description: '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–µ—Ç–∫—É', category: '–ù–∞–≤–∏–≥–∞—Ü–∏—è' },
  
  // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
  { key: '‚Üë‚Üì‚Üê‚Üí', description: '–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –Ω–∞ 1px', category: '–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ' },
  { key: 'Shift+‚Üë‚Üì‚Üê‚Üí', description: '–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –Ω–∞ 10px', category: '–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ' },
  { key: '–ú—ã—à—å + Drag', description: '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç—å –æ–±—ä–µ–∫—Ç', category: '–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ' },
];

interface ShortcutsHelpProps {
  isOpen: boolean;
  onClose: () => void;
}

const ShortcutsHelp: React.FC<ShortcutsHelpProps> = ({ isOpen, onClose }) => {
  const [selectedCategory, setSelectedCategory] = useState<string>('–í—Å–µ');

  const categories = ['–í—Å–µ', ...Array.from(new Set(SHORTCUTS.map(s => s.category)))];

  const filteredShortcuts = selectedCategory === '–í—Å–µ' 
    ? SHORTCUTS 
    : SHORTCUTS.filter(s => s.category === selectedCategory);

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[80vh] overflow-hidden">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between p-6 border-b border-gray-200">
          <h2 className="text-xl font-semibold text-gray-900">
            –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
          </h2>
          <button
            onClick={onClose}
            className="text-gray-400 hover:text-gray-600 transition-colors"
          >
            ‚úï
          </button>
        </div>

        {/* –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
        <div className="p-4 border-b border-gray-200">
          <div className="flex flex-wrap gap-2">
            {categories.map(category => (
              <button
                key={category}
                onClick={() => setSelectedCategory(category)}
                className={`px-3 py-1 rounded-full text-sm transition-colors ${
                  selectedCategory === category
                    ? 'bg-blue-500 text-white'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                {category}
              </button>
            ))}
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à */}
        <div className="p-6 overflow-y-auto max-h-[60vh]">
          <div className="grid gap-4">
            {filteredShortcuts.map((shortcut, index) => (
              <div
                key={index}
                className="flex items-center justify-between p-3 bg-gray-50 rounded-lg"
              >
                <span className="text-gray-700">{shortcut.description}</span>
                <kbd className="px-2 py-1 bg-white border border-gray-300 rounded text-sm font-mono text-gray-800 shadow-sm">
                  {shortcut.key}
                </kbd>
              </div>
            ))}
          </div>
        </div>

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
        <div className="p-4 bg-blue-50 border-t border-blue-200">
          <p className="text-sm text-blue-700">
            üí° <strong>–°–æ–≤–µ—Ç:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã. 
            –ù–∞–∂–º–∏—Ç–µ <kbd className="px-1 py-0.5 bg-white border border-blue-300 rounded text-xs">?</kbd> 
            –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å–ø—Ä–∞–≤–∫–µ.
          </p>
        </div>
      </div>
    </div>
  );
};

export default ShortcutsHelp; 